@{
    Layout = "~/_Layout.cshtml";
    Page.Title = "Scripture Journal";

    var db = Database.Open("Scriptures");
    var selectCommand = "SELECT * FROM ScriptureTable";
    var searchTerm = "";

    if (!Request.QueryString["searchBook"].IsEmpty())
    {
        selectCommand = "SELECT * FROM ScriptureTable WHERE Book like @0";
        searchTerm = Request.QueryString["searchBook"];
    }

    if (!Request.QueryString["searchNotes"].IsEmpty())
    {
        selectCommand = "SELECT * FROM ScriptureTable WHERE Notes LIKE @0";
        searchTerm = Request["searchNotes"] ;
    }

    var selectedData = db.Query(selectCommand, "%" + searchTerm+ "%");
    var grid = new WebGrid(source: selectedData, defaultSort: "Date", rowsPerPage: 5);
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Favorite Scriptures</title>
</head>
<body>
    <h1>Scriptures</h1>
    <form method="get">
        <div class="row">
            <div class="col">
                <label for="searchBook">Book to look for:</label>
                <input style="margin-bottom: 1em;" type="text" name="searchBook" value="@Request.QueryString["searchBook"]" />
                <input type="Submit" value="Search Book" /><br />
            </div>
            <div class="col">
                <div>
                    <label for="SearchNotes">Notes contains the following:</label>
                    <input style="margin-bottom: 1em;" type="text" name="searchNotes" value="@Request.QueryString["searchNotes"]" />
                    <input type="Submit" value="Search Notes" /><br />
                </div>
            </div>
        </div>
        <br />

        <br />
    </form>
    <div>
        @grid.GetHtml(
  tableStyle: "grid",
  headerStyle: "head",
  alternatingRowStyle: "alt",
  columns: grid.Columns(
      grid.Column(format: @<a href="~/UpdateScripture?Id=@item.Id">Edit</a>),
             grid.Column("Book"),
             grid.Column("Chapter"),
             grid.Column("Verse"),
             grid.Column("Notes"),
             grid.Column("Date", format: item => ((item.Date== null) ? "" : item.Date.ToString("MM/dd/yyyy"))),
             grid.Column(format: @<a href="~/DeleteScripture?Id=@item.Id">Delete</a>)
                 )
                 )
    </div>
    <br />
    <p>
        <a href="~/AddScripture" class="btn btn-primary">Add a Scripture</a>
    </p>
</body>
</html>